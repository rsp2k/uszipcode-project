# comprehensive github action yml reference: https://docs.github.com/en/free-pro-team@latest/actions/reference/workflow-syntax-for-github-actions

---
name: CI

on:
  push: # any push event to master will trigger this
    branches: ["master"]
  pull_request: # any pull request to master will trigger this
    branches: ["master"]
  workflow_dispatch: # allows you to manually trigger run

jobs:
  tests:
    name: "${{ matrix.os }} Python ${{ matrix.python-version }}"
    runs-on: "${{ matrix.os }}"
    env:
      USING_COVERAGE: "3.8,3.9,3.10,3.11,3.12"
    strategy:
      matrix:
        os: ["ubuntu-latest", "windows-latest", "macos-latest"]
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
        exclude:
          # Reduce matrix size for faster CI - test fewer combinations on Windows/macOS
          - os: windows-latest
            python-version: "3.9"
          - os: windows-latest
            python-version: "3.10"
          - os: macos-latest
            python-version: "3.9"
          - os: macos-latest
            python-version: "3.11"
    steps:
      - uses: "actions/checkout@v4"
      - uses: "actions/setup-python@v4"
        with:
          python-version: "${{ matrix.python-version }}"

      # Install uv for faster dependency management
      - name: "Install uv"
        uses: "astral-sh/setup-uv@v3"

      # Modern approach with uv (preferred)
      - name: "Install dependencies with uv"
        run: |
          uv sync --dev

      # Fallback to traditional pip if uv fails
      - if: failure()
        name: "Fallback: Install with pip"
        run: |
          python -VV
          python -m pip install --upgrade pip setuptools wheel codecov
          pip install -r requirements.txt
          pip install -r requirements-test.txt
          pip install -r requirements-dev.txt
          pip install -e .

      - name: "Run tests with coverage"
        run: "uv run pytest tests --cov=uszipcode --cov-report=xml"

      - name: "Run linting with ruff"
        run: "uv run ruff check uszipcode/"

      - name: "Check formatting with ruff"
        run: "uv run ruff format uszipcode/ --check"

      - name: "Upload coverage to Codecov"
        if: "contains(env.USING_COVERAGE, matrix.python-version) && matrix.os == 'ubuntu-latest'"
        uses: "codecov/codecov-action@v4"
        with:
          file: ./coverage.xml
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}

